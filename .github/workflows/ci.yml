
# https://github.com/marketplace/actions/install-poetry-action

name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    # runs-on: UbuntuLatest32Cores128G # https://twitter.com/grhmc/status/1696651437869003238
    strategy:
      matrix:
        # python-version: ["3.8", "3.9", "3.10", "3.11"]
        python-version: ["3.10"]

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get install libxcb-icccm4
        sudo apt-get install libxcb-image0
        sudo apt-get install libxcb-keysyms1
        sudo apt-get install libxcb-randr0
        sudo apt-get install libxcb-render-util0
        sudo apt-get install libxcb-xfixes0
        sudo apt-get install libxcb-xinerama0
        sudo apt-get install libxcb-xkb-dev
        sudo apt-get install libxkbcommon-x11-0
        sudo apt-get install xvfb
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root --with dev

    - name: Run tests
      run: |
        source .venv/bin/activate
        Xvfb :20 >/dev/null 2>&1 &
        DISPLAY=:20 ./run_tests.sh

    # - uses: actions/checkout@v2
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     sudo apt-get install libxcb-icccm4
    #     sudo apt-get install libxcb-image0
    #     sudo apt-get install libxcb-keysyms1
    #     sudo apt-get install libxcb-randr0
    #     sudo apt-get install libxcb-render-util0
    #     sudo apt-get install libxcb-xfixes0
    #     sudo apt-get install libxcb-xinerama0
    #     sudo apt-get install libxcb-xkb-dev
    #     sudo apt-get install libxkbcommon-x11-0
    #     sudo apt-get install xvfb
    #     python -m pip install --upgrade pip
    #     python -m pip install flake8 pytest
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Test with unittest
    #   run: |
    #     Xvfb :20 >/dev/null 2>&1 &
    #     DISPLAY=:20 ./run_tests.sh
